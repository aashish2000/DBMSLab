SQL> @Z:\Ex7\Ex7.sql
SQL> REM ASSIGNMENT 7
SQL> 
SQL> REM Bakery Database
SQL> @Z:\Ex3\Bakery.sql;
SQL> REM Bakery Database loaded
SQL> 
SQL> REM Add amount column to Receipts and set value
SQL> alter table Receipts add amount number(5,2);

Table altered.

SQL> create or replace view amount_set as
  2  select i.rno, sum(p.price) as amt from item_list i join products p
  3  on(i.item = p.pid) group by i.rno;

View created.

SQL> update Receipts set amount = (select a.amt from amount_set a where a.rno = Receipts.rno);

200 rows updated.

SQL> 
SQL> REM 1. The combination of Flavor and Food determines the product id. Hence, while
SQL> REM inserting a new instance into the Products relation, ensure that the same combination
SQL> REM of Flavor and Food is not already available.
SQL> 
SQL> create or replace trigger combination
  2  before insert on products for each row
  3  declare
  4  p_food products.food%type;
  5  p_flavor products.flavor%type;
  6  cursor c1 is select food,flavor from products;
  7  begin
  8  open c1;
  9  loop
 10  fetch c1 into p_food,p_flavor;
 11  if c1%FOUND then
 12  if(p_food = :new.food and p_flavor = :new.flavor) then
 13  raise_application_error(-20000,'Error: Combination Present!');
 14  end if;
 15  else
 16  exit;
 17  end if;
 18  end loop;
 19  end;
 20  /

Trigger created.

SQL> 
SQL> insert into products values('50-AL-TW-NE','Almond','Twist',6.12);
insert into products values('50-AL-TW-NE','Almond','Twist',6.12)
            *
ERROR at line 1:
ORA-20000: Error: Combination Present! 
ORA-06512: at "4093.COMBINATION", line 11 
ORA-04088: error during execution of trigger '4093.COMBINATION' 


SQL> 
SQL> REM 2. While entering an item into the item_list relation, update the amount in Receipts with
SQL> REM the total amount for that receipt number.
SQL> 
SQL> create or replace trigger amount_update
  2  after insert on item_list for each row
  3  declare
  4  iprice products.price%type;
  5  begin
  6  select price into iprice from products where pid = :new.item;
  7  update Receipts set amount = amount + iprice where rno = :new.rno;
  8  end;
  9  /

Trigger created.

SQL> 
SQL> select * from Receipts where rno = 73438;

       RNO RDATE            CID     AMOUNT                                      
---------- --------- ---------- ----------                                      
     73438 18-OCT-07         10        4.7                                      

SQL> insert into item_list values(73438, 3, '70-MAR');

1 row created.

SQL> select * from Receipts where rno = 73438;

       RNO RDATE            CID     AMOUNT                                      
---------- --------- ---------- ----------                                      
     73438 18-OCT-07         10       5.95                                      

SQL> 
SQL> REM 3. Implement the following constraints for Item_list relation:
SQL> REM a. A receipt can contain a maximum of five items only.
SQL> REM b. A receipt should not allow an item to be purchased more than thrice.
SQL> 
SQL> create or replace trigger item_constraint
  2  before insert or update on item_list for each row
  3  begin
  4  if :new.ordinal > 5 then
  5  raise_application_error(-20002,'Error: Has more than 5 items!');
  6  end if;
  7  end;
  8  /

Trigger created.

SQL> 
SQL> insert into item_list values(52761, 6, '70-TU');
insert into item_list values(52761, 6, '70-TU')
            *
ERROR at line 1:
ORA-20002: Error: Has more than 5 items! 
ORA-06512: at "4093.ITEM_CONSTRAINT", line 3 
ORA-04088: error during execution of trigger '4093.ITEM_CONSTRAINT' 


SQL> 
SQL> create or replace trigger thrice_constraint
  2  before insert or update on item_list for each row
  3  declare
  4  cursor c2 is select rno, item, count(*) as qty from item_list
  5  where item = :new.item and rno = :new.rno
  6  group by item, rno;
  7  q int;
  8  r item_list.rno%type;
  9  i item_list.item%type;
 10  begin
 11  open c2;
 12  fetch c2 into r, i, q;
 13  if c2%FOUND then
 14  if q >= 3 then
 15  raise_application_error(-20003,'Error: Item count > 3!');
 16  end if;
 17  end if;
 18  end;
 19  /

Trigger created.

SQL> 
SQL> insert into item_list values(31874, 4, '70-MAR');

1 row created.

SQL> insert into item_list values(31874, 5, '70-MAR');
insert into item_list values(31874, 5, '70-MAR')
            *
ERROR at line 1:
ORA-20003: Error: Item count > 3! 
ORA-06512: at "4093.THRICE_CONSTRAINT", line 13 
ORA-04088: error during execution of trigger '4093.THRICE_CONSTRAINT' 


SQL> 
SQL> REM End
SQL> spool off
